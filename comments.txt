Александр, привет!

Получил 10 комментариев:
- 1 можно лучше
- 8 отлично
- 1 надо исправить

Хотел суда описать выбор тех или иных ответов.

./src/dags/sprint6_load.py
148: # 'dialogs': ['message_id', 'message_ts', 'message_from', 'message_to', 'message', 'message_group'], 

Q: В финальной версии проекта должен быть только используемый код, поэтому неиспользуемые импорты нужно удалить.
А: Удалил, тут и добавить нечего :)


./src/sql/ddl/l_user_group_activity.sql
1: CREATE TABLE STV2024111115__DWH.l_user_group_activity

Q: CREATE TABLE STV2024111115__DWH.l_user_group_activity 
Стоит добавить очистку таблицы от данных. Это можно сделать через операторы DELETE (в этом случае таблица останется, но её содержимое будет удалено), TRUNCATE (для очистки таблицы от всех данных с сохранение структуры таблицы) или DROP (таблица будет удалена). Выбор в пользу того или иного оператора зависит от того сколько времени занимает удаление таблицы. Например,  если запись данных идёт 10 минут, то мы на 10 минут лишаемся данных и в таких случаях всё делают через темповую таблицу. Также следует отметить различия между операторами DELETE и TRUNCATE. Оператор TRUNCATE аналогичен оператору DELETE применяемом без оператора WHERE. Основные отличия:
* Оператор SQL TRUNCATE не ведет запись об удаленных данных в журнал событий.
* DELETE осуществляет блокировку построчно, оператор TRUNCATE по всей странице целиком. Вследствие этого, оператор SQL TRUNCATE не возвращает никакого значения, SQL DELETE же, возвращает количество удаленных строк.
* После применения оператора DELETE возможно сделать откат операции и восстановить удаленные данные (команда ROLLBACK). При применении оператора TRUNCATE этого сделать нельзя, однако в СУБД MS SQL Server, оператор может применяться в транзакциях.

A: Исходя из предположения, что DDL запускается не часто и служит именно для создания объектов я выбрал DROP.
В условиях реальной эксплуатации нужно удостовериться, что при пересоздании объекта не пропадут выданные права.
Это может быть как отдельный DAG с настроенным маппингом, использовании одной ТУЗ для взаимодействия с объектами, настроенный CI\CD, или что-то ещё.

В данном кейсе DROP сработает, т.к. нет PIT таблиц ссылающихся на данный линк. 
Любой оператор DELETE TRUNCATE DROP может уткнуться во внешние ключи.

По хорошему для управления структурой БД стоит использовать фреймворки по типу Alembic или другие фреймворки для версионирования БД.
Но у меня нет заготовки Alembic для Vertica, в проектах с испольнозованием PG все DDL помещал в него.

P.S. DROP и TRUNCATE являются DDL командами, DELETE импостер и является DML командой.